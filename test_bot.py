#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –±–æ—Ç–∞
"""

import requests
import json

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8172377647:AAE6MS5TBL-tZKBWs1A3WPECef48cl_SgnU"
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

def test_bot():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
    try:
        response = requests.get(f"{API_URL}/getMe")
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                bot_info = result['result']
                print(f"‚úÖ –ë–æ—Ç: {bot_info['first_name']} (@{bot_info['username']})")
                print(f"   ID: {bot_info['id']}")
                print(f"   –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: {bot_info.get('can_join_groups', False)}")
                print(f"   –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {bot_info.get('can_read_all_group_messages', False)}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    try:
        response = requests.get(f"{API_URL}/getWebhookInfo")
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                webhook_info = result['result']
                print(f"‚úÖ URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                print(f"   –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count', 0)}")
                print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
                print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞ –≤—Ä–µ–º—è: {webhook_info.get('last_error_date', '–ù–µ—Ç')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    try:
        response = requests.get(f"{API_URL}/getUpdates")
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                updates = result['result']
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                for i, update in enumerate(updates[-3:]):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {i+1}: {update.get('update_id')}")
                    if 'message' in update:
                        msg = update['message']
                        print(f"     –°–æ–æ–±—â–µ–Ω–∏–µ: {msg.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞')}")
                        print(f"     –û—Ç: {msg.get('from', {}).get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_bot()
