#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
"""

import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL
BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    print("=== –¢–µ—Å—Ç /api/health ===")
    try:
        response = requests.get(f"{BASE_URL}/api/health")
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        return response.status_code == 200
    except Exception as e:
        print(f"Error: {e}")
        return False

def test_database():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\n=== –¢–µ—Å—Ç /api/test ===")
    try:
        response = requests.get(f"{BASE_URL}/api/test")
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        return response.status_code == 200
    except Exception as e:
        print(f"Error: {e}")
        return False

def test_telegram_auth():
    """–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram"""
    print("\n=== –¢–µ—Å—Ç /api/auth/telegram ===")
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram
        test_data = {
            "id": 123456789,
            "first_name": "–¢–µ—Å—Ç–æ–≤—ã–π",
            "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            "username": "test_user",
            "photo_url": None,
            "auth_date": 1234567890,
            "hash": "test_hash"
        }
        
        response = requests.post(f"{BASE_URL}/api/auth/telegram", json=test_data)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        
        if response.status_code == 200:
            return response.json().get('token')
        return None
    except Exception as e:
        print(f"Error: {e}")
        return None

def test_complaints_with_token(token):
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏"""
    print(f"\n=== –¢–µ—Å—Ç /api/complaints —Å —Ç–æ–∫–µ–Ω–æ–º ===")
    headers = {"Authorization": f"Bearer {token}"}
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π
    print("GET /api/complaints")
    try:
        response = requests.get(f"{BASE_URL}/api/complaints", headers=headers)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
    except Exception as e:
        print(f"Error: {e}")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è
    print("\nPOST /api/complaints")
    try:
        complaint_data = {
            "title": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ",
            "description": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API",
            "category": "general",
            "priority": "medium"
        }
        
        response = requests.post(f"{BASE_URL}/api/complaints", 
                               headers=headers, 
                               json=complaint_data)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
    except Exception as e:
        print(f"Error: {e}")

def main():
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
    if not test_health():
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not test_database():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –¢–µ—Å—Ç 3: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    token = test_telegram_auth()
    if not token:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
        return
    
    # –¢–µ—Å—Ç 4: –†–∞–±–æ—Ç–∞ —Å –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏
    test_complaints_with_token(token)
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()
