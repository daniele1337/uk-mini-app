#!/bin/bash

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub"
echo "=============================="

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_DIR="/var/www/uk-mini-app"
GITHUB_REPO="https://github.com/your-username/uk-mini-app.git"
BACKUP_DIR="/var/www/backups"
LOG_FILE="/var/log/uk-mini-app-update.log"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
mkdir -p "$BACKUP_DIR"
mkdir -p "$(dirname "$LOG_FILE")"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
create_backup() {
    log "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    BACKUP_NAME="uk-mini-app-backup-$(date +%Y%m%d-%H%M%S).tar.gz"
    tar -czf "$BACKUP_DIR/$BACKUP_NAME" -C "$(dirname "$PROJECT_DIR")" "$(basename "$PROJECT_DIR")" 2>/dev/null
    
    if [ $? -eq 0 ]; then
        log "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_NAME"
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
        find "$BACKUP_DIR" -name "uk-mini-app-backup-*.tar.gz" -type f -printf '%T@ %p\n' | sort -n | head -n -5 | cut -d' ' -f2- | xargs -r rm -f
    else
        log "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –º—è–≥–∫–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (–±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)
soft_restart_services() {
    log "üîÑ –ú—è–≥–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    if command -v pm2 &> /dev/null; then
        cd "$PROJECT_DIR"
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º backend –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
        if pm2 list | grep -q "uk-mini-app-backend"; then
            pm2 reload uk-mini-app-backend
            log "‚úÖ Backend –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
        fi
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º frontend –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
        if pm2 list | grep -q "uk-mini-app-frontend"; then
            pm2 reload uk-mini-app-frontend
            log "‚úÖ Frontend –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
        fi
        
        pm2 save
    fi
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if systemctl is-active --quiet nginx; then
        nginx -t && systemctl reload nginx
        log "‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
force_restart_services() {
    log "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã
    if command -v pm2 &> /dev/null; then
        pm2 stop uk-mini-app-backend 2>/dev/null
        pm2 stop uk-mini-app-frontend 2>/dev/null
        log "‚úÖ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    systemctl stop nginx 2>/dev/null && log "‚úÖ Nginx –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º nginx
    systemctl start nginx 2>/dev/null && log "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã
    if command -v pm2 &> /dev/null; then
        cd "$PROJECT_DIR"
        pm2 start ecosystem.config.js
        pm2 save
        log "‚úÖ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
update_dependencies() {
    log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if [ -f "$PROJECT_DIR/requirements.txt" ]; then
        cd "$PROJECT_DIR"
        pip3 install -r requirements.txt --upgrade
        log "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    # Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å package.json –∏–ª–∏ package-lock.json)
    if [ -f "$PROJECT_DIR/package.json" ]; then
        cd "$PROJECT_DIR"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if git diff --name-only HEAD~1 | grep -E "(package\.json|package-lock\.json)" > /dev/null; then
            log "üì¶ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö frontend"
            npm install --production
            npm run build
            log "‚úÖ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ –ø—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω"
        else
            log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
update_database() {
    log "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    if [ -f "$PROJECT_DIR/app.py" ]; then
        cd "$PROJECT_DIR"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ —Ñ–∞–π–ª—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ë–î
        if git diff --name-only HEAD~1 | grep -E "(app\.py|models|migrations)" > /dev/null; then
            log "üóÑÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ë–î"
            python3 -c "
import sys
sys.path.append('.')
from app import app, db
with app.app_context():
    db.create_all()
    print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞')
"
            log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
        else
            log "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
check_changes() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏..."
    
    if [ ! -d "$PROJECT_DIR/.git" ]; then
        log "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
        return 1
    fi
    
    cd "$PROJECT_DIR"
    git fetch origin
    
    LOCAL_COMMIT=$(git rev-parse HEAD)
    REMOTE_COMMIT=$(git rev-parse origin/main)
    
    if [ "$LOCAL_COMMIT" != "$REMOTE_COMMIT" ]; then
        log "üìù –ù–∞–π–¥–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
        return 0
    else
        log "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
analyze_changes() {
    log "üîç –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    
    cd "$PROJECT_DIR"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    CHANGED_FILES=$(git diff --name-only HEAD~1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    CRITICAL_CHANGES=false
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
    if echo "$CHANGED_FILES" | grep -E "(ecosystem\.config\.js|nginx.*\.conf|\.env)" > /dev/null; then
        log "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤"
        CRITICAL_CHANGES=true
    fi
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
    if echo "$CHANGED_FILES" | grep -E "(app\.py|main\.py|server\.py)" > /dev/null; then
        log "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        CRITICAL_CHANGES=true
    fi
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö
    if echo "$CHANGED_FILES" | grep -E "(requirements\.txt|package\.json)" > /dev/null; then
        log "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö"
        CRITICAL_CHANGES=true
    fi
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ë–î
    if echo "$CHANGED_FILES" | grep -E "(models|migrations)" > /dev/null; then
        log "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ë–î"
        CRITICAL_CHANGES=true
    fi
    
    if [ "$CRITICAL_CHANGES" = true ]; then
        log "üîÑ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
        return 1
    else
        log "‚úÖ –¢–æ–ª—å–∫–æ –Ω–µ–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è - –º—è–≥–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞"
        return 0
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
update_project() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ ! -d "$PROJECT_DIR" ]; then
        log "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $PROJECT_DIR"
        log "üîß –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
        git clone "$GITHUB_REPO" "$PROJECT_DIR"
        if [ $? -ne 0 ]; then
            log "‚ùå –û—à–∏–±–∫–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
            return 1
        fi
    fi
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd "$PROJECT_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if ! check_changes; then
        log "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    create_backup
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    OLD_COMMIT=$(git rev-parse HEAD)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
    log "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ —Å GitHub..."
    git fetch origin
    git reset --hard origin/main
    git clean -fd
    
    if [ $? -eq 0 ]; then
        log "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        log "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞"
        return 1
    fi
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if analyze_changes; then
        # –ú—è–≥–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
        log "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –º—è–≥–∫—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É..."
        update_dependencies
        update_database
        soft_restart_services
    else
        # –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
        log "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É..."
        update_dependencies
        update_database
        force_restart_services
    fi
    
    log "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞
rollback() {
    log "üîÑ –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø
    LATEST_BACKUP=$(find "$BACKUP_DIR" -name "uk-mini-app-backup-*.tar.gz" -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -d' ' -f2-)
    
    if [ -n "$LATEST_BACKUP" ] && [ -f "$LATEST_BACKUP" ]; then
        log "üì¶ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞: $(basename "$LATEST_BACKUP")"
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
        if command -v pm2 &> /dev/null; then
            pm2 stop uk-mini-app-backend 2>/dev/null
            pm2 stop uk-mini-app-frontend 2>/dev/null
        fi
        systemctl stop nginx 2>/dev/null
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        rm -rf "$PROJECT_DIR"
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
        tar -xzf "$LATEST_BACKUP" -C "$(dirname "$PROJECT_DIR")"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
        systemctl start nginx 2>/dev/null
        if command -v pm2 &> /dev/null; then
            cd "$PROJECT_DIR"
            pm2 start ecosystem.config.js
            pm2 save
        fi
        
        log "‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"
    else
        log "‚ùå –ë—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-update}" in
    "update")
        update_project
        ;;
    "rollback")
        rollback
        ;;
    "check")
        check_changes
        ;;
    "backup")
        create_backup
        ;;
    "status")
        echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:"
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PROJECT_DIR"
        echo "–ë—ç–∫–∞–ø—ã: $BACKUP_DIR"
        echo "–õ–æ–≥–∏: $LOG_FILE"
        if [ -d "$PROJECT_DIR/.git" ]; then
            cd "$PROJECT_DIR"
            echo "Git —Å—Ç–∞—Ç—É—Å:"
            git status --porcelain
            echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç:"
            git log --oneline -1
        fi
        ;;
    "soft-restart")
        soft_restart_services
        ;;
    "force-restart")
        force_restart_services
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {update|rollback|check|backup|status|soft-restart|force-restart}"
        echo "  update        - –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å GitHub"
        echo "  rollback      - –û—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏"
        echo "  check         - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
        echo "  backup        - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
        echo "  status        - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞"
        echo "  soft-restart  - –ú—è–≥–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  force-restart - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
        exit 1
        ;;
esac

exit $?
