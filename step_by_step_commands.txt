# 🚀 Команды для развертывания на сервере
# Копируйте и выполняйте команды по порядку

# ========================================
# ШАГ 1: Подключение к серверу
# ========================================
ssh root@2a03:6f00:a::1:17a6

# ========================================
# ШАГ 2: Обновление системы
# ========================================
apt update && apt upgrade -y

# ========================================
# ШАГ 3: Установка необходимого ПО
# ========================================
apt install -y python3 python3-pip nodejs npm nginx certbot python3-certbot-nginx git curl wget unzip

# ========================================
# ШАГ 4: Создание структуры директорий
# ========================================
mkdir -p /var/www/uk-mini-app
cd /var/www/uk-mini-app
mkdir -p frontend backend logs

# ========================================
# ШАГ 5: Создание пользователя
# ========================================
useradd -m -s /bin/bash ukapp
usermod -aG sudo ukapp

# ========================================
# ШАГ 6: Настройка Nginx
# ========================================
cat > /etc/nginx/sites-available/uk-mini-app << 'EOF'
server {
    listen 80;
    server_name 2a03:6f00:a::1:17a6;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF

# Активация сайта
ln -sf /etc/nginx/sites-available/uk-mini-app /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# Оптимизация Nginx для 1GB RAM
sed -i 's/worker_processes auto;/worker_processes 1;/' /etc/nginx/nginx.conf
sed -i 's/worker_connections 768;/worker_connections 512;/' /etc/nginx/nginx.conf

# ========================================
# ШАГ 7: Установка PM2
# ========================================
npm install -g pm2

# ========================================
# ШАГ 8: Настройка прав доступа
# ========================================
chown -R ukapp:ukapp /var/www/uk-mini-app
chmod -R 755 /var/www/uk-mini-app

# ========================================
# ШАГ 9: Создание конфигурации PM2
# ========================================
cat > /var/www/uk-mini-app/ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'uk-mini-app-frontend',
      cwd: '/var/www/uk-mini-app/frontend',
      script: 'npm',
      args: 'start',
      env: {
        NODE_ENV: 'production',
        PORT: 3000
      },
      max_memory_restart: '800M',
      instances: 1,
      autorestart: true,
      watch: false,
      max_restarts: 10,
      min_uptime: '10s'
    },
    {
      name: 'uk-mini-app-backend',
      cwd: '/var/www/uk-mini-app/backend',
      script: 'python3',
      args: 'app.py',
      env: {
        FLASK_ENV: 'production',
        FLASK_APP: 'app.py'
      },
      max_memory_restart: '400M',
      instances: 1,
      autorestart: true,
      watch: false,
      max_restarts: 10,
      min_uptime: '10s'
    }
  ]
};
EOF

# ========================================
# ШАГ 10: Запуск Nginx
# ========================================
systemctl enable nginx
systemctl start nginx

# ========================================
# ШАГ 11: Настройка SSL (опционально)
# ========================================
certbot --nginx -d 2a03:6f00:a::1:17a6 --non-interactive --agree-tos --email admin@example.com

# ========================================
# ШАГ 12: Проверка установки
# ========================================
echo "✅ Проверка установленных версий:"
python3 --version
node --version
npm --version
nginx -v

echo "✅ Проверка статуса сервисов:"
systemctl status nginx
pm2 --version

echo "✅ Сервер настроен! Теперь загрузите код приложения." 